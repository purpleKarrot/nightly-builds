name: Nightly Builds
on:
  schedule: [{ cron: "49 04 * * *" }]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        conf:
          - build-name: ASan
            memorycheck-type: AddressSanitizer
            env:
              CC: clang-18
              CXX: clang++-18
              CFLAGS: -fno-omit-frame-pointer -fsanitize=address
              CXXFLAGS: -fno-omit-frame-pointer -fsanitize=address

          - build-name: Clazy
            dependencies: llvm-18-dev libclang-18-dev
            env:
              CC: clang-18
              CXX: clazy
              CLANGXX: clang++-18
              LLVM_ROOT: /usr/lib/llvm-18

          - build-name: Coverage
            coverage-command: gcov-14
            env:
              CC: gcc-14
              CXX: g++-14
              CFLAGS: --coverage
              CXXFLAGS: --coverage

          - build-name: MSan
            memorycheck-type: MemorySanitizer
            env:
              CC: clang-18
              CXX: clang++-18
              CFLAGS: -fno-omit-frame-pointer -fsanitize=memory
              CXXFLAGS: -fno-omit-frame-pointer -fsanitize=memory

          - build-name: TSan
            memorycheck-type: ThreadSanitizer
            env:
              CC: clang-18
              CXX: clang++-18
              CFLAGS: -fno-omit-frame-pointer -fsanitize=thread
              CXXFLAGS: -fno-omit-frame-pointer -fsanitize=thread

          - build-name: IWYU
            dependencies: iwyu
            config-options: >
              -DCMAKE_C_INCLUDE_WHAT_YOU_USE=iwyu
              -DCMAKE_CXX_INCLUDE_WHAT_YOU_USE=iwyu
              -DCMAKE_LINK_WHAT_YOU_USE=ON
            env:
              CC: clang-17
              CXX: clang++-17

          - build-name: Tidy
            config-options: >
              -DCMAKE_C_CLANG_TIDY=clang-tidy-18
              -DCMAKE_CXX_CLANG_TIDY=clang-tidy-18
            env:
              CC: clang-18
              CXX: clang++-18

          - build-name: UBSan
            memorycheck-type: UndefinedBehaviorSanitizer
            env:
              CC: clang-18
              CXX: clang++-18
              CFLAGS: -fno-omit-frame-pointer -fsanitize=undefined
              CXXFLAGS: -fno-omit-frame-pointer -fsanitize=undefined

          - build-name: Valgrind
            dependencies: valgrind
            memorycheck-command: /usr/bin/valgrind
            env:
              CC: gcc-14
              CXX: g++-14

        proj:
          - name: Example
            repository: purpleKarrot/Example
          - name: beman.exemplar
            repository: bemanproject/exemplar
            dependencies: libgtest-dev
          - name: Bitcoin
            repository: bitcoin/bitcoin
            dependencies: libboost-dev libevent-dev
          - name: secp256k1
            repository: bitcoin-core/secp256k1
          - name: libmultiprocess
            repository: bitcoin-core/libmultiprocess
            dependencies: capnproto libcapnp-dev

    name: ${{ matrix.proj.name }} ${{ matrix.conf.build-name }}
    runs-on: ubuntu-24.04
    env: ${{ matrix.conf.env }}

    steps:
      - name: Checkout Source Code
        id: checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.proj.repository }}

      - name: Install Dependencies
        if: matrix.conf.dependencies || matrix.proj.dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install -y --no-install-recommends \
            ${{ matrix.conf.dependencies }} ${{ matrix.proj.dependencies }}

      - name: Build clazy
        if: env.CXX == 'clazy'
        run: |
          git clone --branch 1.13 --depth 1 https://github.com/KDE/clazy.git
          env CXX=$CLANGXX cmake -S clazy -B clazy-build -DCMAKE_BUILD_TYPE=Release -G Ninja
          cmake --build clazy-build
          sudo cmake --install clazy-build
          rm -rf clazy clazy-build

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2

      - name: Dashboard Build
        uses: chorse-dev/cmake-action@master
        with:
          build-name: ${{ matrix.conf.build-name }}
          change-id: ${{ steps.checkout.outputs.commit }}
          cmake-generator: Ninja
          config-options: ${{ matrix.conf.config-options }}
          coverage-command: ${{ matrix.conf.coverage-command }}
          memorycheck-command: ${{ matrix.conf.memorycheck-command }}
          memorycheck-type: ${{ matrix.conf.memorycheck-type }}
          submit-url: "https://chorse.dev/api/submit?project=${{ matrix.proj.name }}"
          use-launchers: ON
